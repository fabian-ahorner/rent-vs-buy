{"version":3,"sources":["Theme/index.js","components/Money.js","state/values/selectors.js","state/values/index.js","components/ConnectedTextField.js","components/BaseValues.js","components/MarketValues.js","components/Charts.js","components/YearsPicker.js","components/Header.js","App.js","serviceWorker.js","state/store.js","index.js"],"names":["palette","primary","main","rent","buy","secondary","dark","light","DARK_THEME","createMuiTheme","type","LIGHT_THEME","Theme","children","ThemeProvider","theme","format","value","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","useFormatter","Money","getValue","key","state","parseFloat","values","getYears","createSelector","years","createSelectors","keys","map","getMonthlyMortgagePayment","mortgage","deposit","mortgageYears","interest","principal","months","r","Math","pow","getMonthlyRentCost","rentDeposit","console","log","totalCost","totalOpportunityCost","Array","fill","opportunityCost","getMonthlyBuyCosts","monthlyPayment","mortgageAmount","mortgageInterest","savingsInterest","houseGrowth","nonInvestibleAssets","totalOpportunityCosts","totalInterestCosts","totalMaintenanceCosts","initialHousePrice","housePrice","_","month","interestCost","max","houseCost","total","initialCost","maintenanceCost","getMonthlyBuyCost","costs","c","slice","createSlice","name","initialState","rentAmount","mortgageDeposit","reducers","setValue","payload","valueKey","actions","percentageAdornment","position","currencyAdornment","connect","createStructuredSelector","props","percentage","money","rest","handleChange","React","useCallback","e","target","InputProps","endAdornment","undefined","startAdornment","onChange","margin","variant","BaseValues","className","classes","useStyles","monthlyMortgagePayment","useSelector","header","inputContainer","rentContainer","Typography","color","inputRow","label","buyContainer","ConnectedTextField","Fab","compareButton","makeStyles","contrastText","padding","spacing","display","flexDirection","alignItems","headline","marginBottom","title","fontFamily","textAlign","icon","height","width","marginRight","paddingBottom","alignSelf","flex","flexWrap","justifyContent","maxWidth","flexBasis","marginTop","marginLeft","MarketValues","useState","expanded","setExpanded","handleExpandClick","Card","square","summaryContainer","IconButton","clsx","expand","expandOpen","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","contentContainer","Charts","useTheme","monthlyRentCost","monthlyBuyCost","monthlyBuyCosts","moneyFormatter","cost","i","costFormatter","item","chartContainer","data","top","right","bottom","left","stackId","dot","dataKey","tickFormatter","stroke","strokeDasharray","tickSize","formatter","YEARS_OPTIONS","YearsPicker","selectedYears","dispatch","useDispatch","root","flexGrow","menuButton","ButtonAppBar","AppBar","Toolbar","edge","background","content","Boolean","window","location","hostname","match","persistConfig","storage","rootReducer","combineReducers","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcb770fa.chunk.js","sourcesContent":["import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\n\nconst palette = {\n  primary: {\n    main: '#f9b282'\n  },\n  rent: {\n    main: '#64ccda'\n  },\n  buy: {\n    main: '#8f4426'\n  },\n  secondary: {\n    dark: '#8f4426',\n    main: '#de6b35',\n    light: '#f9b282',\n  }\n}\n\n\nconst DARK_THEME = createMuiTheme({\n  palette: {\n    type: 'dark',\n    ...palette,\n  },\n});\n\nconst LIGHT_THEME = createMuiTheme({\n  palette\n})\n\nexport default function Theme({ children, dark }) {\n  return (<ThemeProvider theme={dark ? DARK_THEME : LIGHT_THEME}>\n    {children}\n  </ThemeProvider>)\n}\n","function format(value, currency){\n  const formatter = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: currency || 'GBP',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  })\n  return formatter.format(value)\n}\n\nexport function useFormatter(){\n  const currency = 'GBP'\n  return value => format(value, currency)\n}\n\nexport default function Money({value, children, currency}){\n  return format(value||children, currency)\n}","import { createSelector } from 'reselect';\n\nexport const getValue = key => state => {\n  return parseFloat(state.values[key]) || 0\n}\n\nexport const getValueKeyValue = (state, props) => {\n  return state.values[props.valueKey]\n}\n\nexport const getValues = state => state.values\n\nexport const getYears = createSelector(\n  [getValues],\n  state => state.years\n)\n\nconst createSelectors = (...keys) => keys.map(key => getValue(key))\n\nexport const getMonthlyMortgagePayment = createSelector(\n  createSelectors('mortgageAmount', 'mortgageDeposit', 'mortgageYears', 'mortgageInterest'),\n  (mortgage, deposit, mortgageYears, interest) => {\n    const principal = mortgage - deposit\n    const months = mortgageYears * 12\n    if (interest === 0) {\n      return principal / months\n    } else {\n      const r = interest / 1200\n      return principal * r * Math.pow(1 + r, months) / (Math.pow(1 + r, months) - 1)\n    }\n  }\n)\n\nexport const getOpportunityRentCost = createSelector(\n  createSelectors('years', 'rentAmount', 'rentDeposit', 'savingsInterest'),\n  (years, rent, rentDeposit, interest) => {\n    console.log(\"rentDeposit: \", rent, rentDeposit)\n    const initialCost = rent * rentDeposit / 100\n    let totalCost = initialCost\n    let totalOpportunityCost = 0\n    return Array(years * 12 + 1).fill(0).map(() => {\n      const opportunityCost = totalCost * interest / 12 / 100\n      totalCost += rent + opportunityCost\n      totalOpportunityCost += opportunityCost\n      return totalOpportunityCost\n    })\n  }\n)\n\nexport const getMonthlyRentCost = createSelector(\n  createSelectors('years', 'rentAmount', 'rentDeposit', 'savingsInterest'),\n  (years, rent, rentDeposit, interest) => {\n    console.log(\"rentDeposit: \", rent, rentDeposit)\n    const initialCost = rent * rentDeposit / 100\n    let totalCost = initialCost\n    return Array(years * 12 + 1).fill(0).map(() => {\n      totalCost += rent + totalCost * interest / 12 / 100\n      return totalCost\n    })\n  }\n)\n\nexport const getMonthlyBuyCosts = createSelector(\n  [getMonthlyMortgagePayment, ...createSelectors('years', 'mortgageAmount',\n    'mortgageInterest',\n    'mortgageDeposit', 'savingsInterest', 'houseGrowth')],\n  (monthlyPayment, years, mortgageAmount, mortgageInterest, deposit, savingsInterest, houseGrowth) => {\n    let principal = mortgageAmount\n    const initialCost = 10000\n    let nonInvestibleAssets = 10000 + deposit\n    let totalOpportunityCosts = 0\n    let totalInterestCosts = 0\n    let totalMaintenanceCosts = 0\n    let maintenanceCost = 200\n    const initialHousePrice = mortgageAmount + deposit\n    let housePrice = initialHousePrice\n    return Array(years * 12 + 1).fill(0).map((_, month) => {\n      const interestCost = Math.max(0, mortgageInterest / 100 / 12 * principal)\n      const opportunityCost = nonInvestibleAssets * savingsInterest / 12 / 100\n      const houseCost = initialHousePrice - housePrice\n      nonInvestibleAssets += monthlyPayment + maintenanceCost + opportunityCost\n      principal -= (monthlyPayment - interestCost)\n      totalMaintenanceCosts += maintenanceCost\n      totalInterestCosts += interestCost\n      totalOpportunityCosts += opportunityCost\n      housePrice = housePrice + housePrice * houseGrowth / 12 / 100\n      return {\n        total: initialCost + totalOpportunityCosts + totalMaintenanceCosts + totalInterestCosts + houseCost,\n        initialCost: initialCost,\n        opportunityCost: totalOpportunityCosts,\n        maintenanceCost: totalMaintenanceCosts,\n        interestCost: totalInterestCosts,\n        houseCost: houseCost,\n        month\n      }\n    })\n  }\n)\n\n\nexport const getMonthlyBuyCost = createSelector(\n  [getMonthlyBuyCosts],\n  (costs) => {\n    return costs.map(c => c.total)\n  }\n)","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'counter',\n  initialState: {\n    rentAmount: 900,\n    rentDeposit: 100,\n    mortgageAmount: 300000,\n    mortgageInterest: 2.0,\n    mortgageYears: 25,\n    mortgageDeposit: 30000,\n    houseGrowth: 1.0,\n    savingsInterest: 1.0,\n    years: 30\n  },\n  reducers: {\n    setValue: (state, { payload }) => ({ ...state, [payload.valueKey]: payload.value }),\n  }\n})\n\nexport const { setValue } = slice.actions\nexport default slice.reducer\n","import TextField from '@material-ui/core/TextField/TextField';\nimport React from 'react';\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\nimport { getValueKeyValue } from '../state/values/selectors';\nimport { setValue } from '../state/values';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nconst percentageAdornment = <InputAdornment position=\"end\">%</InputAdornment>\nconst currencyAdornment = <InputAdornment position=\"start\">£</InputAdornment>\n\nfunction ConnectedTextField({ valueKey, setValue, percentage, money, ...rest }) {\n  const handleChange = React.useCallback(e => {\n    console.log(\"Change\")\n    setValue({\n      valueKey,\n      value: e.target.value\n    })\n  }, [valueKey])\n  return (<TextField\n    type=\"number\"\n    InputProps={{\n      endAdornment: percentage ? percentageAdornment : undefined,\n      startAdornment: money ? currencyAdornment : undefined\n    }}\n    onChange={handleChange}\n    margin=\"normal\"\n    variant=\"outlined\"\n    {...rest}\n  />)\n}\n\n\nexport default connect(\n  createStructuredSelector({value: getValueKeyValue}),\n  { setValue: setValue }\n)(ConnectedTextField)","import React from 'react'\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport CompareIcon from '@material-ui/icons/Timeline';\nimport Money from './Money';\nimport ConnectedTextField from './ConnectedTextField';\nimport { useSelector } from 'react-redux';\nimport { getMonthlyMortgagePayment } from '../state/values/selectors';\n\nexport default function BaseValues({ className }) {\n  const classes = useStyles()\n  const monthlyMortgagePayment = useSelector(getMonthlyMortgagePayment)\n\n  return (\n    <div className={`${classes.header} ${className}`}>\n      <div className={classes.inputContainer}>\n        <div className={classes.rentContainer}>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Rent\n            {/*(<Money value={values.rent.monthlyRent}/>)*/}\n          </Typography>\n          <div className={classes.inputRow}>\n            <ConnectedTextField\n              valueKey='rentAmount'\n              money\n              label=\"Rent / Month\"\n            />\n            <ConnectedTextField\n              valueKey='rentDeposit'\n              percentage\n              label=\"Rent deposit\"\n            />\n          </div>\n        </div>\n        <div className={classes.buyContainer}>\n          <Typography variant=\"h6\">\n            Buy (<Money value={monthlyMortgagePayment}/>)\n          </Typography>\n          <div className={classes.inputRow}>\n            <ConnectedTextField\n              valueKey='mortgageAmount'\n              money\n              label=\"Mortgage amount\"\n            />\n            <ConnectedTextField\n              ConnectedTextField\n              valueKey='mortgageDeposit'\n              money\n              label=\"Deposit\"\n            />\n          </div>\n          <div className={classes.inputRow}>\n            <ConnectedTextField\n              valueKey='mortgageYears'\n              label=\"Years\"\n            />\n            <ConnectedTextField\n              valueKey='mortgageInterest'\n              percentage\n              label=\"Interest\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <Fab variant=\"extended\" color={'primary'} className={classes.compareButton}>\n        Compare\n        <CompareIcon />\n      </Fab>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    color: theme.palette.secondary.contrastText,\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  headline: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    marginBottom: theme.spacing(3),\n  },\n  title: {\n    // color: theme.palette.primary.main,\n    // fontFamily: 'Cinzel, serif',\n    fontFamily: 'Montserrat, serif',\n    textAlign: 'start'\n  },\n  icon: {\n    // color: theme.palette.primary.main,\n    color: theme.palette.secondary.contrastText,\n    height: '4rem',\n    width: '4rem',\n    marginRight: theme.spacing(2),\n    marginBottom: '-0.2rem'\n  },\n  inputRow: {\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'row',\n    alignSelf: 'stretch',\n    '& > div': {\n      marginRight: theme.spacing(2),\n      flex: '1',\n    }\n  },\n  inputContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignSelf: 'stretch',\n    justifyContent: 'space-around',\n    '&>div': {\n      margin: theme.spacing(1, 2),\n      maxWidth: 512,\n      flexBasis: 256,\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  },\n  compareButton: {\n    alignSelf: 'flex-end',\n    marginTop: theme.spacing(2),\n    '& svg': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}))\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport clsx from 'clsx'\nimport ConnectedTextField from './ConnectedTextField';\n\nexport default function MarketValues({ values }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n  const handleExpandClick= React.useCallback(() => setExpanded(!expanded), [expanded])\n\n  return (<>\n    <Card square className={classes.summaryContainer}>\n      <Typography>Test</Typography>\n      <IconButton\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: expanded,\n        })}\n        onClick={handleExpandClick}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    </Card>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <Card square className={classes.contentContainer}>\n        <ConnectedTextField\n          valueKey='savingsInterest'\n          label=\"Savings interest\"\n          percentage\n        />\n        <ConnectedTextField\n          label=\"House growth\"\n          valueKey={'houseGrowth'}\n          percentage\n        />\n      </Card>\n    </Collapse>\n  </>)\n}\n\nconst useStyles = makeStyles(theme => ({\n  contentContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: theme.spacing(1,2),\n  },\n  summaryContainer: {\n    display: 'flex',\n    padding: theme.spacing(.5,2),\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}))","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { useFormatter } from '../components/Money';\nimport {\n  getMonthlyBuyCost,\n  getMonthlyBuyCosts,\n  getMonthlyRentCost\n} from '../state/values/selectors';\nimport { useSelector } from 'react-redux';\nimport { Area, AreaChart, CartesianGrid, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\n\nexport default function Charts() {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const monthlyRentCost = useSelector(getMonthlyRentCost)\n  const monthlyBuyCost = useSelector(getMonthlyBuyCost)\n  const monthlyBuyCosts = useSelector(getMonthlyBuyCosts)\n\n  const data = monthlyRentCost.map((cost, i) => ({\n    rent: cost,\n    buy: monthlyBuyCost[i],\n    month: i\n  }))\n  const moneyFormatter = useFormatter()\n  const costFormatter = (item) => {\n    return moneyFormatter(item)\n  }\n\n  const yearFormatter = month => month / 12\n  return (\n\n    <div className={classes.chartContainer}>\n      {/*<LineChart width={600}*/}\n                 {/*height={300}*/}\n                 {/*data={data}*/}\n                 {/*margin={{ top: 5, right: 20, bottom: 5, left: 20 }}>*/}\n        {/*<Line*/}\n          {/*dot={false}*/}\n          {/*name=\"Rent\"*/}\n          {/*dataKey=\"rent\"*/}\n          {/*tickFormatter={costFormatter}*/}\n          {/*stroke={theme.palette.rent.main}/>*/}\n        {/*<Line*/}\n          {/*dot={false}*/}\n          {/*name=\"Buy\"*/}\n          {/*dataKey=\"buy\"*/}\n          {/*tickFormatter={costFormatter}*/}\n          {/*stroke={theme.palette.buy.main}/>*/}\n        {/*<CartesianGrid*/}\n          {/*stroke=\"#ccc\"*/}\n          {/*strokeDasharray=\"5 5\"/>*/}\n        {/*<XAxis*/}\n          {/*stroke=\"white\"*/}\n          {/*dataKey=\"month\"*/}\n          {/*tickFormatter={yearFormatter}*/}\n          {/*tickSize={5}/>*/}\n        {/*<YAxis*/}\n          {/*stroke=\"white\"*/}\n          {/*tickFormatter={costFormatter}/>*/}\n        {/*<Tooltip formatter={costFormatter}/>*/}\n      {/*</LineChart>*/}\n\n      <AreaChart\n        width={600}\n        height={300}\n        data={monthlyBuyCosts}\n        margin={{ top: 5, right: 20, bottom: 5, left: 20 }}>\n        <Area\n          stackId={1}\n          dot={false}\n          name=\"House cost\"\n          dataKey=\"houseCost\"\n          tickFormatter={costFormatter}\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n        />\n        <Area\n          stackId={1}\n          dot={false}\n          name=\"Initial cost\"\n          dataKey=\"initialCost\"\n          tickFormatter={costFormatter}\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n        />\n        <Area\n          stackId={1}\n          dot={false}\n          stroke=\"#82ca9d\"\n          fill=\"#82ca9d\"\n          name=\"Maintenance cost\"\n          dataKey=\"maintenanceCost\"\n          tickFormatter={costFormatter}/>\n        <Area\n          stroke=\"#ffc658\"\n          fill=\"#ffc658\"\n          stackId={1}\n          dot={false}\n          name=\"Interest cost\"\n          dataKey=\"interestCost\"\n          tickFormatter={costFormatter}/>\n        <Area\n          stackId={1}\n          dot={false}\n          name=\"Opportunity cost\"\n          dataKey=\"opportunityCost\"\n          tickFormatter={costFormatter}\n          stroke={theme.palette.buy.main}/>\n        <CartesianGrid\n          stroke=\"#ccc\"\n          strokeDasharray=\"5 5\"/>\n        <XAxis\n          stroke=\"white\"\n          dataKey=\"month\"\n          tickFormatter={yearFormatter}\n          tickSize={5}/>\n        <YAxis\n          stroke=\"white\"\n          tickFormatter={costFormatter}/>\n        <Tooltip formatter={costFormatter}/>\n      </AreaChart>\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  chartContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: theme.spacing(2, 4)\n  }\n}))","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getYears } from '../state/values/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup/ButtonGroup';\nimport { setValue } from '../state/values';\n\nconst YEARS_OPTIONS = [10, 30, 50]\nexport default function YearsPicker() {\n\n  const selectedYears = useSelector(getYears)\n  const dispatch = useDispatch()\n\n  return (\n    <ButtonGroup color=\"primary\">\n      {YEARS_OPTIONS.map(years => (\n        <Button\n          onClick={() => dispatch(setValue({ valueKey: 'years', value: years }))}\n          variant={years === selectedYears && 'contained'}>\n          {years} years {selectedYears}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  chartContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: theme.spacing(2, 4)\n  }\n}))","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Rent vs Buy calculator\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport './App.css';\nimport Theme from './Theme';\nimport BaseValues from './components/BaseValues';\nimport MarketValues from './components/MarketValues';\nimport Typography from '@material-ui/core/Typography';\nimport Money, { useFormatter } from './components/Money';\nimport {\n  getMonthlyBuyCost,\n  getMonthlyBuyCosts,\n  getMonthlyMortgagePayment,\n  getMonthlyRentCost\n} from './state/values/selectors';\nimport { useSelector } from 'react-redux';\nimport Charts from './components/Charts';\nimport YearsPicker from './components/YearsPicker';\nimport Header from './components/Header';\n\nexport default function App() {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const monthlyRentCost = useSelector(getMonthlyRentCost)\n  const monthlyBuyCost = useSelector(getMonthlyBuyCost)\n  const monthlyMortgagePayment = useSelector(getMonthlyMortgagePayment)\n  const monthlyBuyCosts = useSelector(getMonthlyBuyCosts)\n\n  const data = monthlyRentCost.map((cost, i) => ({\n    rent: cost,\n    buy: monthlyBuyCost[i],\n    month: i\n  }))\n  const moneyFormatter = useFormatter()\n  const costFormatter = (item) => {\n    return moneyFormatter(item)\n  }//`£${cost}`\n\n  const yearFormatter = month => month / 12\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Theme dark>\n        <header className={classes.header}>\n          <Charts/>\n          <YearsPicker/>\n        </header>\n        <MarketValues/>\n      </Theme>\n      <BaseValues/>\n\n      <content className={classes.content}>\n        <Typography variant={'h2'}>\n          <Money value={monthlyMortgagePayment}/>\n        </Typography>\n      </content>\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    background: `linear-gradient(135deg, ${theme.palette.rent.main}, ${theme.palette.buy.main})`,\n    padding: theme.spacing(2, 4)\n  },\n  content: {\n    padding: theme.spacing(4, 6)\n\n  },\n  chartContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {configureStore, createSlice} from '@reduxjs/toolkit'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { combineReducers } from 'redux'\nimport values from './values'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst rootReducer = combineReducers({\n  values,\n})\nconst store = configureStore({\n// export default persistStore(configureStore({\n  reducer: persistReducer(persistConfig, rootReducer)\n})\nexport const persistor = persistStore(store)\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Theme from './Theme';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { Provider } from 'react-redux'\nimport store, { persistor } from './state/store'\n\nReactDOM.render(<Provider store={store}>\n  <Theme>\n    <PersistGate loading={null} persistor={persistor}>\n      <App/>\n    </PersistGate>\n  </Theme>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}